version: 2

jobs:
  website:
    working_directory: ~/SEPT2021_MajorProject/FrontEnd/myfirstapp
    docker:
      - image: circleci/node:16.5.0

    steps:
      - checkout
      
      - restore_cache:
          key: npm-cache-{{ .Branch }}-{{ checksum "package.json" }}
            
      - run: cd FrontEnd/myfirstapp && npm install
      - run: cd FrontEnd/myfirstapp && npm run build

      - save_cache:
          paths:
            - ~/SEPT2021_MajorProject/FrontEnd/myfirstapp/node_modules
          key: npm-cache-{{ .Branch }}-{{ checksum "package.json" }}


          
          
          
  book_services:
    working_directory: ~/SEPT2021_MajorProject/BackEnd/bookmicroservices

    docker:
      - image: circleci/openjdk:11-stretch
        environment:
          PGHOST: 127.0.0.1

      - image: circleci/postgres:9.6.2-alpine

    steps:
      - checkout:
          path: ~/SEPT2021_MajorProject

      - restore_cache: # Download the cache dependencies
          keys:
            - bookmicroservices-{{ checksum "pom.xml" }} # Appends cache key with a hash of pom.xml file
            - bookmicroservices-


      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/SEPT2021_MajorProject/BackEnd/bookmicroservices/.m2
          key: bookmicroservices-{{ checksum "pom.xml" }}

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt update && sudo apt install postgresql-client
      - run: psql -U postgres -c "create database writerpad;"

      - run: mvn package;

      - store_test_results:
          path: ~/SEPT2021_MajorProject/BackEnd/bookmicroservices/target/surefire-reports

      - store_artifacts:
          path: ~/SEPT2021_MajorProject/BackEnd/bookmicroservices/target/demo-java-spring-0.0.1-SNAPSHOT.jar





  login_services:
    working_directory: ~/SEPT2021_MajorProject/BackEnd/loginmicroservices

    docker:
      - image: circleci/openjdk:11-stretch
        environment:
          PGHOST: 127.0.0.1
          
      - image: circleci/postgres:9.6.2-alpine

    steps:
      - checkout:
          path: ~/SEPT2021_MajorProject

      - restore_cache: # Download the cache dependencies
          keys:
            - loginmicroservices-{{ checksum "pom.xml" }} # Appends cache key with a hash of pom.xml file
            - loginmicroservices-
            

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/SEPT2021_MajorProject/BackEnd/loginmicroservices/.m2
          key: loginmicroservices-{{ checksum "pom.xml" }}
      
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
          
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt update && sudo apt install postgresql-client
      - run: psql -U postgres -c "create database writerpad;"
      
      - run: mvn package;
      
      - store_test_results:
          path: ~/SEPT2021_MajorProject/BackEnd/loginmicroservices/target/surefire-reports
          
      - store_artifacts:
          path: ~/SEPT2021_MajorProject/BackEnd/loginmicroservices/target/demo-java-spring-0.0.1-SNAPSHOT.jar




  order_services:
    working_directory: ~/SEPT2021_MajorProject/BackEnd/ordermicroservices

    docker:
      - image: circleci/openjdk:11-stretch
        environment:
          PGHOST: 127.0.0.1
          
      - image: circleci/postgres:9.6.2-alpine

    steps:
      - checkout:
          path: ~/SEPT2021_MajorProject

      - restore_cache: # Download the cache dependencies
          keys:
            - ordermicroservices-{{ checksum "pom.xml" }} # Appends cache key with a hash of pom.xml file
            - ordermicroservices-
            

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/SEPT2021_MajorProject/BackEnd/ordermicroservices/.m2
          key: ordermicroservices-{{ checksum "pom.xml" }}
      
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
          
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt update && sudo apt install postgresql-client
      - run: psql -U postgres -c "create database writerpad;"
      
      - run: mvn package;
      
      - store_test_results:
          path: ~/SEPT2021_MajorProject/BackEnd/ordermicroservices/target/surefire-reports
          
      - store_artifacts:
          path: ~/SEPT2021_MajorProject/BackEnd/ordermicroservices/target/demo-java-spring-0.0.1-SNAPSHOT.jar
          
          
  review_services:
    working_directory: ~/SEPT2021_MajorProject/BackEnd/reviewmicroservices

    docker:
      - image: circleci/openjdk:11-stretch
        environment:
          PGHOST: 127.0.0.1
          
      - image: circleci/postgres:9.6.2-alpine

    steps:
      - checkout:
          path: ~/SEPT2021_MajorProject

      - restore_cache: # Download the cache dependencies
          keys:
            - reviewmicroservices-{{ checksum "pom.xml" }} # Appends cache key with a hash of pom.xml file
            - reviewmicroservices-
            

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/SEPT2021_MajorProject/BackEnd/reviewmicroservices/.m2
          key: reviewmicroservices-{{ checksum "pom.xml" }}
      
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
          
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt update && sudo apt install postgresql-client
      - run: psql -U postgres -c "create database writerpad;"
      
      - run: mvn package;
      
      - store_test_results:
          path: ~/SEPT2021_MajorProject/BackEnd/reviewmicroservices/target/surefire-reports
          
      - store_artifacts:
          path: ~/SEPT2021_MajorProject/BackEnd/reviewmicroservices/target/demo-java-spring-0.0.1-SNAPSHOT.jar



workflows:
  version: 2
  all:
    jobs:
      - website
      - book_services
      - login_services
      - order_services
      - review_services
