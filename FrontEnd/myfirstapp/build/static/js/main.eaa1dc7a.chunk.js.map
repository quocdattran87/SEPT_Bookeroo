{"version":3,"sources":["components/BookManagement/SingleBook.js","reducers/errorReducer.js","reducers/userReducer.js","reducers/securityReducer.js","reducers/orderReducer.js","reducers/index.js","actions/types.js","store.js","actions/bookActions.js","actions/userActions.js","components/Layout/Header.js","components/Layout/HomePage.js","components/Layout/HeaderElements.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/UserManagement/LogIn/LogInPage.js","components/UserManagement/SignUp/SignUpPage.js","components/BookManagement/SearchedBooks.js","actions/reviewActions.js","components/UserManagement/Profile/User/User.js","actions/orderActions.js","components/UserManagement/Profile/ProfilePage.js","components/UserManagement/Profile/SellerProfile.js","components/PaymentManagement/PaymentSuccess.js","components/BookManagement/CreateBook.js","components/UserManagement/Profile/Admin/PendingAccounts.js","components/UserManagement/Profile/Admin/AllAccounts.js","components/UserManagement/Profile/User/UserOrders.js","components/UserManagement/Profile/Edit.js","components/Layout/About.js","components/UserManagement/Profile/Admin/AllTransactions.js","components/UserManagement/Profile/Admin/AllBooks.js","components/UserManagement/Profile/User/ReviewUser.js","components/UserManagement/Profile/User/ReviewBook.js","components/UserManagement/Profile/Admin/AllReviews.js","App.js","serviceWorker.js","index.js"],"names":["PayPalButton","initialState","usernameError","emailError","loginError","users","user","seller","validToken","booleanActionPayload","payload","orders","userOrders","rootReducer","combineReducers","errors","state","action","type","security","initalState","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","compose","applyMiddleware","getBook","bookID","history","dispatch","a","axios","get","res","localStorage","setItem","JSON","stringify","data","res2","push","alert","getUsers","to","getSeller","username","deleteUser","id","delete","query","Header","props","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","trim","BookQuery","queryBooks","console","log","getState","getUser","forceUpdate","className","data-toggle","data-target","placeholder","background-color","accountType","charAt","toUpperCase","slice","Component","withRouter","connect","post","HomePage","books","then","response","callback","map","book","key","onClick","src","image","alt","title","price","toFixed","NavLink1","styled","nav","Link","NavLink2","setJWTToken","FaBars","div","token","defaults","headers","common","logout","removeItem","password","passwordError","LogInPage","validate","LoginRequest","login","style","display","justifyContent","alignItems","height","htmlFor","decoded","jwt_decode","isActive","Error","email","confirmPassword","abn","confirmPasswordError","accountTypeError","abnError","SignUpPage","test","length","approved","newUser","toLowerCase","createNewUser","status","SearchedBooks","parse","Grid","container","spacing","item","xs","author","postReview","newReview","User","input","getAllOrders","getAllBooks","getAllReviews","Orders","getUserOrders","confirm","firstName","lastName","phone","about","ProfilePage","SellerProfile","reviews","userReviews","review","moment","create_At","fromNow","starCount","score","reviewer","SingleBook","bookReviews","paypalIsLoaded","paypal","Buttons","driver","React","ReactDOM","actions","order","create","purchase_units","amount","newOrder","buyer","createNewOrder","capture","sellerUserName","genre","isbn","description","createOrder","onApprove","PaymentSuccess","titleError","isbnError","authorError","genreError","descriptionError","priceError","imageError","CreateBook","newBook","createNewBook","PendingAccounts","removeFromTable","contactId","newUsers","index","findIndex","contact","splice","i","approveUser","put","label","AllAccounts","csvReport","filename","UserOrders","option","orderUpdate","reviewBook","pathname","bookReviewedID","bookReviewedTitle","userReviewed","diff","orderId","Edit","phoneError","imageSelected","updateUser","editUser","fileUploadHandler","params","About","AllTransactions","allOrders","AllBooks","ReviewUser","reviewError","scoreError","location","nextValue","onStarClick","ReviewBook","AllReviews","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","component","Boolean","hostname","match","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaa1dc7a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport store from '../../store'\nimport Header from '../Layout/Header'\n\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getSeller } from '../../actions/userActions'\nimport { createNewOrder } from '../../actions/orderActions'\nimport moment from 'moment'\nimport StarRatingComponent from 'react-star-rating-component'\n\n\nlet PayPalButton\n\nclass SingleBook extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            book : JSON.parse(localStorage.book),\n            reviews : JSON.parse(localStorage.bookReviews),\n            paypalIsLoaded : false\n        }\n    }\n\n    componentDidMount(){\n        PayPalButton = window.paypal.Buttons.driver('react', { React, ReactDOM })\n        this.setState({ paypalIsLoaded: true })\n    }\n\n    createOrder(data, actions){\n        return actions.order.create({\n            purchase_units: [\n                {\n                    amount: {\n                        value: this.state.book.price.toFixed(2),\n                    },\n                },\n            ],\n        });\n    }\n\n    onApprove(data, actions){\n        const newOrder = {\n            seller: this.state.book.seller,\n            buyer: store.getState().security.user.username,\n            book: this.state.book.title,\n            bookID: this.state.book.id,\n            price: this.state.book.price.toFixed(2),\n            status: 'Preparing'\n        }\n        this.props.createNewOrder(newOrder, this.props.history)\n        return actions.order.capture()\n    }\n\n    onSubmit(e,sellerUserName){\n        e.preventDefault()\n        this.props.getSeller(sellerUserName, this.props.history)\n    }\n\n    render(){\n        return (\n          <div>\n            <Header />\n            <div className='single-book-row'>\n                <div className='single-book-image-container'>\n                    <img className='single-book-image' src={this.state.book.image} alt={this.state.book.title}/>\n                </div>\n                <div className='book-information-container'>\n                    <div className='book-information'>\n                        <h1 className = 'book-title-listing'>{this.state.book.title}</h1>\n                        <h1 className = 'book-author-listing'><strong>By:</strong> {this.state.book.author}</h1>\n                        <hr/>\n                        <h1 className = 'book-genre-listing'><strong><strong>Genre:</strong></strong> {this.state.book.genre}</h1>\n                        <h1 className = 'book-isbn-listing'><strong><strong>ISBN:</strong></strong> {this.state.book.isbn}</h1>\n                        <br/>\n                        <h1 className = 'book-description-listing'><strong><strong>Description:</strong></strong></h1>\n                        <p>\n                            {this.state.book.description}\n                        </p>\n                    </div>\n                    <div className='book-buy-container'>\n                        <h1 className = 'book-seller-listing'><strong><strong>Seller:</strong></strong> <Link to='' onClick={e=>this.onSubmit(e,this.state.book.seller)}>{this.state.book.seller.charAt(0).toUpperCase() + this.state.book.seller.slice(1)}</Link></h1>\n                        <h1 className = 'book-price-listing'>${this.state.book.price.toFixed(2)}</h1>\n                        {\n                            store.getState().security.validToken \n                            ?   <>{ store.getState().security.user.accountType === 'Admin' \n                                ?   <p>Admin cannot buy</p> \n                                :   <>{\n                                        this.state.book.seller.toLowerCase() === store.getState().security.user.username.toLowerCase()\n                                        ? <p>Why would you want to buy your own book?</p>\n                                        : this.state.paypalIsLoaded ? <>\n                                        <div className='paypal-btn'>\n                                            <PayPalButton\n                                                createOrder={(data, actions) => this.createOrder(data, actions)}\n                                                onApprove={(data, actions) => this.onApprove(data, actions)}/>\n                                        </div></> : \"\"\n                                    }</>\n                                }</>\n                            :   <p>Login to purchase</p>\n                        }\n                    </div>\n                </div>\n            </div>\n            <hr/>\n            <>{ this.state.reviews.length > 0 ?\n                <div className='review-container'>\n                    <h1 className='review-heading'>Reviews</h1>\n                    {\n                        this.state.reviews.map(\n                        review =>\n                        <div key={review.id} className='user-reviews'>\n                            <label className='review-time-label'>\n                                -  {moment(review.create_At).fromNow()}\n                            </label><br/>\n                            <StarRatingComponent \n                                className='star-rating' \n                                starCount={5}\n                                value={review.score}\n                                /><br/>\n                            <label className='review-review-label'>\n                                {review.review}\n                            </label><br/>\n                            <label className='review-reviewer-label'>\n                                {review.reviewer.charAt(0).toUpperCase()+review.reviewer.slice(1)}\n                            </label><br/><br/>\n                        </div>\n                        )}\n                </div> : ''\n                }</>\n          </div>\n        )\n    }\n}\nSingleBook.propTypes = {\n    getSeller: PropTypes.func.isRequired,\n    createNewOrder: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \n  const mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n  })\n  \n  export default connect(\n    mapStateToProps,\n    { getSeller, createNewOrder }\n  )(SingleBook)","import { EMAIL_EXISTS_ERROR, LOGIN_ERROR, USER_EXISTS_ERROR } from '../actions/types'\n\nconst initialState = {\n  usernameError: '',\n  emailError: '',\n  loginError: ''\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_EXISTS_ERROR:\n      state.usernameError = action.payload\n      return state\n    case EMAIL_EXISTS_ERROR:\n      state.emailError = action.payload\n      return state\n    case LOGIN_ERROR:\n      state.loginError = action.payload\n      return state\n    default:\n      return state\n  }\n}\n","import { GET_USERS, GET_USER } from '../actions/types'\n\nconst initialState = {\n  users: [],\n  user: {},\n  seller: {}\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      }\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload\n      }\n    default:\n      return state\n  }\n}","import { SET_CURRENT_USER } from '../actions/types'\n\nconst initialState = {\n  validToken: false,\n  user: {}\n}\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      }\n    default:\n      return state\n  }\n}","import { GET_USER_ORDERS } from '../actions/types'\n\nconst initialState = {\n    orders: [],\n    userOrders: []\n}\n  \nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_USER_ORDERS:\n      state.userOrders = action.payload\n      return state\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport errorReducer from './errorReducer'\nimport userReducer from './userReducer'\nimport securityReducer from './securityReducer'\nimport orderReducer from './orderReducer'\n\n\nconst rootReducer = combineReducers({\n  errors: errorReducer,\n  user: userReducer,\n  security: securityReducer,\n  orders: orderReducer\n})\n\nexport default rootReducer\n","export const GET_USERS = 'GET_USERS'\nexport const GET_USER = 'GET_USER'\n\nexport const GET_USER_ORDERS = 'GET_USER_ORDERS'\n\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const USER_EXISTS_ERROR = 'USER_EXISTS_ERROR'\nexport const EMAIL_EXISTS_ERROR = 'EMAIL_EXISTS_ERROR'\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\n\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\n\nconst initalState = {}\nconst middleware = [thunk]\n\nlet store\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools){\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  )\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  )\n}\n\nexport default store\n\n","import axios from 'axios'\n\nexport const queryBooks = (query, history) => async dispatch => {\n    try {\n        const res = await axios.post('http://ec2-13-55-218-209.ap-southeast-2.compute.amazonaws.com:8080/api/books/search', query)\n        localStorage.setItem('books', JSON.stringify(res.data))\n        localStorage.setItem('query', query.query)\n        history.push('/')\n        history.push('/search')\n    } \n    catch (err){\n        alert('Search error')\n        history.push('/')\n    }\n};\n\nexport const getAllBooks = (history) => async dispatch => {\n    try {\n        const res = await axios.get('http://ec2-13-55-218-209.ap-southeast-2.compute.amazonaws.com:8080/api/books')\n        localStorage.setItem('books', JSON.stringify(res.data))\n        history.push('/all-books')\n    } \n    catch (err){\n        alert('Failed to get single book')\n        history.push('/')\n    }\n};\n\nexport const getBook = (bookID, history) => async dispatch => {\n    try {\n        const res = await axios.get(`http://ec2-13-55-218-209.ap-southeast-2.compute.amazonaws.com:8080/api/books/${bookID}`)\n        localStorage.setItem('book', JSON.stringify(res.data))\n        const res2 = await axios.get(`http://ec2-54-79-242-119.ap-southeast-2.compute.amazonaws.com:8083/api/reviews/book/${bookID}`)\n        localStorage.setItem('bookReviews', JSON.stringify(res2.data))\n        history.push('/book')\n    } \n    catch (err){\n        alert('Failed to get single book')\n        history.push('/')\n    }\n};","import axios from 'axios'\nimport { GET_USERS, GET_USER, EMAIL_EXISTS_ERROR, SET_CURRENT_USER } from './types'\n\n\nexport const getUsers = (history, to) => async dispatch => {\n    try {\n        const res = await axios.get('http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users')\n        localStorage.setItem('users', JSON.stringify(res.data))\n        dispatch({\n            type: GET_USERS,\n            payload: res.data\n        })\n        if (to === 'toPending') {\n            history.push('/pending')\n        } else if (to === 'toAllUsers') {\n            history.push('/allUsers')\n        }\n    } catch (error) {\n        alert('Failed to get all users')\n    }\n}\n\nexport const getUser = (id, history) => async dispatch => {\n    try {\n      const res = await axios.get(`http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/${id}`)\n      dispatch({\n          type: GET_USER,\n          payload: res.data\n      });\n\n    } catch (error) {\n        alert('Failed to get user')\n        history.push('/')\n    }\n}\n\nexport const getSeller = (username, history) => async dispatch => {\n    try {\n        const res = await axios.get(`http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/seller/${username}`)\n        localStorage.setItem('seller', JSON.stringify(res.data))\n        const res2 = await axios.get(`http://ec2-54-79-242-119.ap-southeast-2.compute.amazonaws.com:8083/api/reviews/user/${username}`)\n        localStorage.setItem('userReviews', JSON.stringify(res2.data))\n        history.push('/seller')\n    } catch (error) {\n        alert('Failed to get seller')\n        history.push('/')\n    }\n}\n\nexport const deleteUser = (id) => async dispatch => {\n    try {\n        await axios.delete(`http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/${id}`)\n    } catch (error) {\n        alert('Failed to delete user')\n        alert(error)\n    }\n}\n\nexport const approveUser = (id) => async dispatch => {\n  try {\n      await axios.put(`http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/approve/${id}`)\n  } catch (error) {\n    alert('Approve error')\n  }\n}\n\nexport const editUser = (id,user,history) => async dispatch => {\n    try {\n        const res = await axios.put(`http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/${id}`, null, { params: {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            phone: user.phone,\n            abn: user.abn,\n            about: user.about,\n            image: user.image\n        }})\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: res.data\n        })\n      \n        history.push('/dashboard')\n    } catch (error) {\n      if (error.response.status === 400) {\n          dispatch({\n              type: EMAIL_EXISTS_ERROR,\n              payload: error.response.data.username\n          })\n      } else {\n          alert('Failed to save profile')\n      }\n      history.push('/')\n      history.push('/edit')\n    }\n}\n","import React, { Component } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { queryBooks } from '../../actions/bookActions'\nimport { getUser } from '../../actions/userActions'\nimport store from '../../store'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    query: ''\n}\n\n class Header extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = initialState\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        if (this.state.query.trim()) {\n            const BookQuery = {\n                query: this.state.query\n            }\n            this.props.queryBooks(BookQuery, this.props.history)\n        }\n    }\n\n    componentDidMount(){\n        console.log(store.getState())\n        if (store.getState().security.validToken) {\n            this.props.getUser(store.getState().security.user.id, this.props.history)\n        }\n        this.forceUpdate()\n    }\n\n    render(){\n        return (\n            <div>\n            <nav className='navbar navbar-expand-sm navbar-dark mb-4'>\n            <div className='container'>\n                <Link className='navbar-brand' to='/'>\n                    <h1>Bookeroo<i className='fas fa-book'></i></h1>\n                </Link>\n                <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#mobile-nav'>\n                    <span className='navbar-toggler-icon' />\n                </button>\n    \n                <div className='collapse navbar-collapse' id='mobile-nav'>\n                    <div className='navbar-nav mr-auto'>\n                        <form className='searchForm' onSubmit={this.onSubmit}>\n                            <div className='search'>\n                                <input \n                                    id='query'\n                                    className='searchBar' \n                                    name='query' \n                                    type='text' \n                                    placeholder='Search Title, Author, Genre or ISBN'\n                                    value={this.state.query}\n                                    onChange={this.onChange}/>\n                                <button \n                                    className='searchIcon'\n                                    type='submit'\n                                    background-color='white'>\n                                    <SearchIcon/>\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    {\n                        store.getState().security.validToken ? \n\n                        <ul className='navbar-nav ml-auto'>\n                            <li className='about-item'>\n                                <Link className='nav-link ' to='/about'>\n                                    About\n                                </Link>\n                            </li>\n                            { store.getState().security.user.accountType !== 'Admin' ?\n                            <li className='nav-item'>\n                                <Link className='nav-link ' to='/sell'>\n                                    Sell\n                                </Link>\n                            </li> : ''\n                            }\n                            <li className='nav-item'>\n                                <Link className='nav-link ' to='/dashboard'>\n                                    {store.getState().security.user.username.charAt(0).toUpperCase() + store.getState().security.user.username.slice(1)}\n                                </Link>\n                            </li>\n                        </ul> \n                        :\n                        <ul className='navbar-nav ml-auto'>\n                            <li className='about-item'>\n                                <Link className='nav-link ' to='/about'>\n                                    About\n                                </Link>\n                            </li>\n                            <li className='nav-item'>\n                                <Link className='nav-link ' to='/signup'>\n                                    Sign Up\n                                </Link>\n                            </li>\n                            <li className='nav-item'>\n                                <Link className='nav-link' to='/login'>\n                                    Log In\n                                </Link>\n                            </li>\n                        </ul>\n                    }\n                </div>\n            </div>\n        </nav>\n            </div>\n        )\n    }\n}\nHeader.propTypes = {\n    queryBooks: PropTypes.func.isRequired,\n    getUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { queryBooks, getUser }\n)(Header))","import axios from 'axios'\nimport React, { Component } from 'react'\nimport { getBook } from '../../actions/bookActions'\nimport '../BookManagement/Book.css'\nimport Header from './Header'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nclass HomePage extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      books : []\n    }\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  componentDidMount(){\n    axios.get('http://ec2-13-55-218-209.ap-southeast-2.compute.amazonaws.com:8080/api/books').then((response) => {\n      this.setState({ books: response.data })\n    })\n  }\n\n  componentWillUnmount(){\n    this.setState = (state,callback) => {\n      return\n    }\n  }\n\n  onSubmit(e,id){\n    e.preventDefault();\n    this.props.getBook(id, this.props.history)\n  }\n\n  render(){\n    return(\n      <>\n        <div className='App'><Header/></div>\n\n        <div className='wrapper-row'>\n          <h1 className='popular-heading'>Popular</h1>\n          <div className='book-row'>\n          {\n              this.state.books.map(\n              book =>\n              <Link \n                key={book.id} className='book-card' to='/book' type='submit' onClick={e=>this.onSubmit(e,book.id)}>\n                <div className='bookCover'>\n                  <img key={book.id} src={book.image} alt={book.title} className='book-image'/>\n                </div>\n                <h1 className='book-price'>${book.price.toFixed(2)}</h1>\n                <h1 className='book-title'>{book.title}</h1>\n              </Link>\n            )}\n          </div>\n        </div>\n\n        <hr />\n             \n        <div className='wrapper-row'>\n          <h1 className='popular-heading'>Highest Rated</h1>\n          <div className='book-row'>\n          {\n              this.state.books.map(\n              book =>\n              <Link \n                key={book.id} className='book-card' to='/book' type='submit' onClick={e=>this.onSubmit(e,book.id)}>\n                <div className='bookCover'>\n                  <img key={book.id} src={book.image} alt={book.title} className='book-image'/>\n                </div>\n                <h1 className='book-price'>${book.price.toFixed(2)}</h1>\n                <h1 className='book-title'>{book.title}</h1>\n              </Link>\n            )}\n          </div>\n        </div>\n\n        <hr />\n      </>\n    )\n  }\n}\n\nHomePage.propTypes = {\n  getBook: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n})\n\nexport default connect(\n  mapStateToProps,\n  { getBook }\n)(HomePage)","import styled from 'styled-components'\nimport { NavLink as Link } from 'react-router-dom'\nimport { FaBars } from 'react-icons/fa'\n\nexport const Nav = styled.nav`\n    background: linear-gradient(90deg, rgb(110,94,254)0%, rgba(73,63,252,1)100%);\n    height: 80px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem calc((100vw-1000px)/2)\n    z-index: 10;\n`\n\nexport const NavLink1 = styled(Link)`\n    color: #fff;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 0 1rem;\n    height: 100%;\n    cursor: pointer;\n    &.active {\n        color: #fff;\n    }\n`\n\nexport const NavLink2 = styled(Link)`\n    color: #000;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 0 1rem;\n    height: 100%;\n    cursor: pointer;\n    &.active {\n        color: #000;\n    }\n`\n\nexport const NavLink = styled(Link)`\n    color: #fff;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 0 1rem;\n    height: 100%;\n    cursor: pointer;\n\n    &.active {\n        color: #79eaf6;\n    }\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        color: #79eaf6;\n    }\n`\n\nexport const Bars = styled(FaBars)`\n    display: none;\n    color: #fff;\n\n    @media screen and (max-width: 768px) {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        transform: translate(-100%,75%);\n        font-size: 1.8rem;\n        cursor: pointer;\n    }\n`\n\nexport const NavMenu = styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: 5px;\n\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n`\n\nexport const NavBtn = styled.nav`\n    display: flex;\n    align-items: center;\n    margin-right: 24px;\n    margin-left: 24px;\n\n    @media screen and (max-width: 768px) {\n        display:none;\n    }\n`\n\nexport const NavBtnLink = styled(Link)`\n    border-radius: 4px;\n    background: #6568F4;\n    padding: 10px 22px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n\n    &:hover {\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #010606;\n    }\n`\n","import axios from 'axios'\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n\nexport default setJWTToken","import axios from 'axios'\nimport {LOGIN_ERROR, USER_EXISTS_ERROR, EMAIL_EXISTS_ERROR, SET_CURRENT_USER} from './types'\nimport setJWTToken from '../securityUtils/setJWTToken'\nimport jwt_decode from 'jwt-decode'\n\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post('http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/register', newUser)\n        history.push('/login')\n        if (newUser.accountType === 'Regular') {\n            alert('Account created! Please log in.')\n        } else if (newUser.accountType === 'Publisher') {\n            alert('Account created. Please wait to be verified by an admin.')\n        }\n    } \n    catch (err) {\n        if (err.response.status === 400) {\n            dispatch({\n                type: EMAIL_EXISTS_ERROR,\n                payload: err.response.data.username\n            })\n        }\n        if (err.response.status === 406) {\n            dispatch({\n                type: USER_EXISTS_ERROR,\n                payload: err.response.data.username\n            })\n        }\n        history.push('/')\n        history.push('/signup')\n    }\n}\n\nexport const login = (LoginRequest, history) => async dispatch => {\n    try {\n        const res = await axios.post('http://ec2-13-210-248-68.ap-southeast-2.compute.amazonaws.com:8081/api/users/login', LoginRequest)\n        const { token } = res.data;\n        const decoded = jwt_decode(token)\n\n        if (decoded.isActive === false) {\n            throw new Error('Awaiting Approval')\n        } else {\n            localStorage.setItem('jwtToken', token)\n            setJWTToken(token); \n            dispatch({\n                type: SET_CURRENT_USER,\n                payload: decoded\n            })\n            history.push('/')\n        }\n    }\n    catch (err)\n    {\n        if (typeof err.response === 'undefined') {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: 'Account is awaiting approval by admin'\n            })\n        } else {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: 'Invalid username and password combination'\n            })\n        }\n        history.push('/')\n        history.push('/login')\n    }\n\n}\n\nexport const logout = (history) => dispatch => {\n    localStorage.removeItem('jwtToken')\n    setJWTToken(false)\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: null\n    })\n    history.push('/')\n}\n\nexport const createNewBook = (newBook, history) => async dispatch => {\n    try {\n        await axios.post('http://ec2-13-55-218-209.ap-southeast-2.compute.amazonaws.com:8080/api/books/sell', newBook)\n        history.push('/')\n        alert('Book listed!')\n    } \n    catch (err){\n        history.push('/')\n        alert('Failed to list book!')\n    }\n}","import React, { Component } from 'react'\nimport { NavLink1, NavLink2 } from '../../Layout/HeaderElements'\nimport '../SignUp/Form.css'\nimport PropTypes from 'prop-types'\nimport { login } from '../../../actions/securityActions'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nconst initialState = {\n    username: '',\n    password: '',\n    usernameError: '',\n    passwordError: ''\n}\n\nclass LogInPage extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = initialState\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n\n    componentDidMount(){\n        if(this.props.errors.loginError){\n            let usernameError = this.props.errors.loginError\n            this.setState({usernameError})\n            this.props.errors.loginError = ''\n        }\n        this.forceUpdate()\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validate = () => {\n        let usernameError = ''\n        let passwordError = ''\n\n        if (!this.state.username.trim()) {\n            usernameError = 'Username required'\n        }\n        if (!this.state.password) {\n            passwordError = 'Password required'\n        } \n        if (usernameError || passwordError) {\n            this.setState({ usernameError, passwordError})\n            return false\n        }\n        return true\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const isValid = this.validate()\n\n        if (isValid) {\n            const LoginRequest = {\n                username: this.state.username,\n                password: this.state.password\n            }\n            this.props.login(LoginRequest, this.props.history)\n        }\n    }\n\n    render(){\n        return(\n            <div className='form-container'>\n                <span className='close-btn'><NavLink1 to='/'>x</NavLink1> </span>\n                <div className='form-content-left'>\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                        <NavLink2 to='/'><h1>Bookeroo<i className='fas fa-book'></i></h1></NavLink2>\n                    </div>\n                </div>\n                \n                <div className='form-content-right'>\n                    <form className='form' onSubmit={this.onSubmit}>\n                        <h1>Log In</h1>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='username' \n                                className='form-label'>\n                                Username\n                            </label>\n                            <input \n                                id='username'\n                                type='text' \n                                name='username' \n                                className='form-input' \n                                placeholder='Enter your username'\n                                value={this.state.username}\n                                onChange={this.onChange}\n                            /> \n                            <p>{this.state.usernameError}</p>\n                        </div>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='password' \n                                className='form-label'>\n                                Password\n                            </label>\n                            <input \n                                id='password' \n                                type='password' \n                                name='password' \n                                className='form-input' \n                                placeholder='Enter your password'\n                                value={this.state.password}\n                                onChange={this.onChange}\n                            />\n                            <p>{this.state.passwordError}</p>\n                        </div>\n                        \n                        <button \n                            className='form-input-btn' \n                            type='submit'>\n                            Log In\n                        </button>\n                        <span className='form-input-login'>\n                            Don't have an account? Create one <Link to='/signup'>here</Link>\n                        </span>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nLogInPage.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default connect(\n    mapStateToProps,\n    { login }\n)(LogInPage)\n","import React, { Component } from 'react'\nimport { NavLink1, NavLink2 } from '../../Layout/HeaderElements'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createNewUser } from '../../../actions/securityActions'\nimport * as PropTypes from 'prop-types'\n\n\nconst initialState = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    accountType: '',\n    abn: '',\n    usernameError: '',\n    emailError: '',\n    passwordError: '',\n    confirmPasswordError: '',\n    accountTypeError: '',\n    abnError: ''\n}\n\n\nclass SignUpPage extends Component {\n    constructor(props){\n        super(props)\n        this.state = initialState\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount(){\n        if(this.props.errors.usernameError){\n            let usernameError = this.props.errors.usernameError\n            this.setState({usernameError})\n            this.props.errors.usernameError = ''\n\n        } else if (this.props.errors.emailError){\n            let emailError = this.props.errors.emailError\n            this.setState({emailError})\n            this.props.errors.emailError = ''\n        }\n        this.forceUpdate()\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validate = () => {\n        let usernameError = ''\n        let emailError = ''\n        let passwordError = ''\n        let confirmPasswordError = ''\n        let accountTypeError = ''\n        let abnError = ''\n\n        if (!this.state.username.trim()){\n            usernameError = 'Username required'\n        }\n        if (!this.state.email){\n            emailError = 'Email required'\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(this.state.email)){\n            emailError = 'Invalid email'\n        }\n        if (!this.state.password){\n            passwordError = 'Password required'\n        } else if (this.state.password.length < 6){\n            passwordError = 'Password needs to be 6 characters or more'\n        } else if (!this.state.confirmPassword && !this.state.password){\n            confirmPasswordError = 'Password required'\n        } else if (!this.state.confirmPassword && this.state.password.length >= 6){\n            confirmPasswordError = 'Confirmation required'\n        } else if (this.state.confirmPassword !== this.state.password){\n            passwordError = 'Passwords to not match'\n        }\n        if (!this.state.accountType){\n            accountTypeError = 'Account type required'\n        }\n        if (!this.state.abn && this.state.accountType === 'Publisher'){\n            abnError = 'ABN required'\n        } else if ((this.state.abn.length !== 10 || (!/^[0-9\\b]+$/.test(this.state.abn)))&&this.state.abn.length !== 0) {\n            abnError = 'ABN must be 10 digits'\n        }\n\n        if (usernameError || emailError || passwordError || confirmPasswordError || accountTypeError || abnError) {\n            this.setState({ usernameError, emailError, passwordError, confirmPasswordError, accountTypeError, abnError })\n            return false\n        }\n        return true\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        const isValid = this.validate()\n        let approved = true\n        \n        if (isValid){\n            if (this.state.accountType === 'Publisher'){\n                approved = false\n            }\n            const newUser = {\n                username: this.state.username.toLowerCase(),\n                email: this.state.email.toLowerCase(),\n                password: this.state.password,\n                confirmPassword: this.state.confirmPassword,\n                accountType: this.state.accountType,\n                isActive: approved,\n                abn: this.state.abn,\n            }\n            this.props.createNewUser(newUser, this.props.history)\n        }\n    }\n\n    render(){\n        return(\n            <div className='form-container'>\n                <span className='close-btn'><NavLink1 to='/'>x</NavLink1> </span>\n                <div className='form-content-left'>\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\n                        <NavLink2 to='/'><h1>Bookeroo<i className='fas fa-book'></i></h1></NavLink2>\n                    </div>\n                </div>\n                \n                <div className='form-content-right'>\n                    <form className='form' onSubmit={this.onSubmit}>\n                        <h1>Sign Up</h1>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='username' \n                                className='form-label'>\n                                Username\n                            </label>\n                            <input \n                                id='username'\n                                type='text' \n                                name='username' \n                                className='form-input' \n                                placeholder='Enter your username'\n                                value={this.state.username}\n                                onChange={this.onChange}\n                            /> \n                            <p>{this.state.usernameError}</p>\n                        </div>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='email' \n                                className='form-label'>\n                                Email\n                            </label>\n                            <input \n                                id='email' \n                                type='email' \n                                name='email' \n                                className='form-input' \n                                placeholder='Enter your email'\n                                value={this.state.email}\n                                onChange={this.onChange}\n                            />\n                            <p>{this.state.emailError}</p>\n                        </div>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='password' \n                                className='form-label'>\n                                Password\n                            </label>\n                            <input \n                                id='password' \n                                type='password' \n                                name='password' \n                                className='form-input' \n                                placeholder='Enter your password'\n                                value={this.state.password}\n                                onChange={this.onChange}\n                            />\n                            <p>{this.state.passwordError}</p>\n                        </div>\n                        <div className='form-inputs'>\n                            <label \n                                htmlFor='confirmPassword' \n                                className='form-label'>\n                                Confirm Password\n                            </label>\n                            <input \n                                id='confirmPassword' \n                                type='password' \n                                name='confirmPassword' \n                                className='form-input' \n                                placeholder='Confirm your password'\n                                value={this.state.confirmPassword}\n                                onChange={this.onChange}\n                            />\n                            <p>{this.state.confirmPasswordError}</p>\n                        </div>\n                        <div className='form-inputs'>\n                            <div className='account-type-inputs'>\n                                <div>\n                                    <label \n                                        htmlFor='accountType' \n                                        className='form-label'>\n                                        Account Type\n                                    </label>\n                                    <div >\n                                        <select \n                                            id='accountType'\n                                            type='text' \n                                            name='accountType'\n                                            onChange={this.onChange}>\n                                            <option></option>\n                                            <option>Regular</option>\n                                            <option>Publisher</option>\n                                        </select>\n                                        <p>{this.state.accountTypeError}</p>\n                                    </div>\n                                </div>\n                                {\n                                    this.state.accountType === 'Publisher'\n                                    ?\n                                    <div className='abn-form-input'>\n                                        <label \n                                            htmlFor='abn' \n                                            className='form-label'>\n                                            ABN\n                                        </label>\n                                        <input \n                                            id='abn' \n                                            type='text' \n                                            name='abn' \n                                            className='form-input' \n                                            placeholder='Enter your ABN'\n                                            value={this.state.abn}\n                                            onChange={this.onChange}\n                                        />\n                                        <p>{this.state.abnError}</p>\n                                    </div>\n                                    : ''\n                                }\n                            </div>\n                        </div>\n                        <button\n                            className='form-input-btn' \n                            type='submit'>\n                            Create Account\n                        </button>\n                        <span className='form-input-login'>\n                            Already have an account? Login <Link to='/login'>here</Link>\n                        </span>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nSignUpPage.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n  \nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(SignUpPage)\n","import React, { Component } from 'react'\nimport Header from '../Layout/Header'\nimport Grid from '@material-ui/core/Grid'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getBook } from '../../actions/bookActions'\n\nclass SearchedBooks extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            books : JSON.parse(localStorage.books),\n            query: localStorage.query\n        }\n    }\n\n    onSubmit(e,id){\n        e.preventDefault();\n        this.props.getBook(id, this.props.history)\n    }\n\n    render(){\n        return (\n          <>\n            <div className='App'><Header/></div>\n            {\n                this.state.books.length === 0 ?\n                <h1 className = 'search-results'> No results for '{this.state.query}'</h1> :\n                <h1 className = 'search-results'>{this.state.books.length} books containing '{this.state.query}'</h1>\n            }\n            <div className='grid-container'>\n            <Grid container spacing={3}>\n            {\n                this.state.books.map(\n                book =>\n                <Grid item xs={3} key={book.id}>\n                    <Link\n                        className='searched-book-card' to='/book' type='submit' onClick={e=>this.onSubmit(e,book.id)}>\n                        <img key={book.id} src={book.image} alt={book.title} className='book-image'/>\n                        <h1 className='book-title'>{book.title}</h1>\n                        <div className='book-info'>\n                        <h1 className='book-author'>Author: {book.author}</h1>\n                        <h1 className='book-price'>Price: {book.price.toFixed(2)}</h1>\n                        </div>\n                    </Link>\n                </Grid>\n                )}\n            </Grid>\n            </div>\n          </>\n        )\n    }\n}\n\nSearchedBooks.propTypes = {\n    getBook: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n  }\n  \n  const mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n  })\n  \n  export default connect(\n    mapStateToProps,\n    { getBook }\n  )(SearchedBooks)\n","import axios from 'axios'\n\nexport const postReview = (newReview, history) => async dispatch => {\n    try {\n        await axios.post('http://ec2-54-79-242-119.ap-southeast-2.compute.amazonaws.com:8083/api/reviews/review', newReview)\n        history.push('/user-orders')\n    }\n    catch (err){\n        alert('Review user failed!')\n        history.push('/')\n    }\n}\n\nexport const getAllReviews = (history) => async dispatch => {\n    try{\n        const res = await axios.get('http://ec2-54-79-242-119.ap-southeast-2.compute.amazonaws.com:8083/api/reviews')\n        localStorage.setItem('reviews', JSON.stringify(res.data))\n        history.push('/all-reviews')\n    }\n    catch (err){\n        alert('Get all reviews failed!')\n        history.push('/')\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../../../../actions/securityActions'\nimport { getUserOrders, getAllOrders } from '../../../../actions/orderActions'\nimport { getUsers, deleteUser } from '../../../../actions/userActions'\nimport { getAllBooks } from '../../../../actions/bookActions'\nimport { getAllReviews } from '../../../../actions/reviewActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport store from '../../../../store'\n\n\nclass User extends Component {\n\n    onSubmit(e,input){\n        e.preventDefault();\n        if (input === 'pendingAccounts'){\n            this.props.getUsers(this.props.history, 'toPending') \n        }\n        else if (input === 'allAccounts'){\n            this.props.getUsers(this.props.history, 'toAllUsers') \n        }\n        else if (input === 'allTransactions'){\n            this.props.getAllOrders(this.props.history) \n        }\n        else if (input === 'allBooks'){\n            this.props.getAllBooks(this.props.history) \n        }\n        else if (input === 'allReviews'){\n            this.props.getAllReviews(this.props.history) \n        }\n        else if (input === 'orders'){\n            const Orders = {\n                username: store.getState().security.user.username\n            }\n            this.props.getUserOrders(Orders, this.props.history)\n        }\n        else if (input === 'delete'){\n            if (window.confirm('Are you sure you want to delete your account?')) {\n                this.props.deleteUser(store.getState().security.user.id)\n                this.props.logout(this.props.history)\n                alert('Account deleted')\n            } else {} //Do nothing\n        }\n        else if (input === 'logout'){\n            this.props.logout(this.props.history)\n        }\n    }\n\n    render(){\n        return(\n            <div className='container'>\n                <div className='card card-body bg-light mb-3'>\n                    <div className='row'>\n                        <div className='col-3'>\n                            <img src={store.getState().security.user.image} alt=''/>\n                            {\n                                store.getState().security.user.accountType === 'Admin' \n                                ?\n                                <ul className='list-group'>\n                                    <br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'pendingAccounts')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Pending Accounts</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'allAccounts')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>All Accounts</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'allTransactions')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>All Transactions</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'allBooks')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>All Books</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'allReviews')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>All Reviews</i>\n                                        </li>\n                                    </Link>\n                                    <br/>\n                                    <Link to='/edit'>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>Edit Account</i>\n                                        </li>\n                                    </Link>\n                                    <br/><br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'logout')}>\n                                        <li className='list-group-item board'>\n                                            Log Out \n                                        </li>\n                                    </Link>\n                                </ul>\n                                :\n                            \n                                <ul className='list-group'>\n                                    <br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'orders')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Transaction History</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='/edit'>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>Edit Account</i>\n                                        </li>\n                                    </Link>\n                                    <br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'delete')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-minus-circle pr-1'>Delete Account</i>\n                                        </li>\n                                    </Link>\n                                    <br/><br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'logout')}>\n                                        <li className='list-group-item board'>\n                                            Log Out \n                                        </li>\n                                    </Link>\n                                </ul>\n                            }\n                        </div>\n                        <div className='col-lg-9 col-md-4 col-9'>\n                            <h4>{store.getState().security.user.username.charAt(0).toUpperCase() + store.getState().security.user.username.slice(1).toLowerCase()}</h4><hr/>\n                            {   \n                                store.getState().security.user.firstName !== null && store.getState().security.user.firstName !== '' ?\n                                <>{\n                                    store.getState().security.user.lastName === null || store.getState().security.user.lastName === '' ?\n                                    <p>Name: {store.getState().security.user.firstName.charAt(0).toUpperCase() + store.getState().security.user.firstName.slice(1)}</p> :\n                                    <p>Name: {store.getState().security.user.firstName.charAt(0).toUpperCase() + store.getState().security.user.firstName.slice(1)} {store.getState().security.user.lastName.charAt(0).toUpperCase() + store.getState().security.user.lastName.slice(1).toLowerCase()}</p>\n                                }</> : <>{\n                                    store.getState().security.user.lastName !== null && store.getState().security.user.lastName !== '' ?\n                                    <p>Name: {store.getState().security.user.lastName.charAt(0).toUpperCase() + store.getState().security.user.lastName.slice(1)}</p> : ''\n                                }</>\n                            }\n                            <p>Email: {store.getState().security.user.email.toLowerCase()}</p>\n                            {\n                                store.getState().security.user.phone !== null && store.getState().security.user.phone !== '' ?\n                                <p>Phone: {store.getState().security.user.phone}</p> : ''\n                            }\n                            {\n                                store.getState().security.user.accountType === 'Publisher' ?\n                                <>{\n                                    store.getState().security.user.abn !== null && store.getState().security.user.abn !== '' ?\n                                    <p>ABN: {store.getState().security.user.abn}</p> : ''\n\n                                }</> : ''\n                            }\n                            {\n                                store.getState().security.user.about !== null && store.getState().security.user.about !== '' ?\n                                <p>About: {store.getState().security.user.about}</p> : ''\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nUser.propTypes = {\n    logout: PropTypes.func.isRequired,\n    getUserOrders: PropTypes.func.isRequired,\n    getAllOrders: PropTypes.func.isRequired,\n    getAllBooks: PropTypes.func.isRequired,\n    getAllReviews: PropTypes.func.isRequired,\n    getUsers: PropTypes.func.isRequired,\n    deleteUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { logout, getUserOrders, getAllOrders, getAllBooks, getAllReviews, getUsers, deleteUser }\n)(User))\n","import axios from 'axios'\nimport { GET_USER_ORDERS } from './types'\n\nexport const createNewOrder = (newOrder, history) => async dispatch => {\n    try {\n        await axios.post('http://ec2-13-210-206-21.ap-southeast-2.compute.amazonaws.com:8082/api/orders/createOrder', newOrder)\n        history.push('/payment-success')\n    }\n    catch (err){\n        alert('Create Order failed!')\n        history.push('/')\n    }\n}\n\nexport const getAllOrders = (history) => async dispatch => {\n    try {\n        const res = await axios.get('http://ec2-13-210-206-21.ap-southeast-2.compute.amazonaws.com:8082/api/orders')\n        localStorage.setItem('allOrders', JSON.stringify(res.data))\n        history.push('/all-orders')\n    } catch (error){\n        alert('Failed to get orders')\n    }\n}\n\nexport const getUserOrders = (username, history) => async dispatch => {\n    try {\n        const res = await axios.post('http://ec2-13-210-206-21.ap-southeast-2.compute.amazonaws.com:8082/api/orders/userOrders', username)\n        localStorage.setItem('orders', JSON.stringify(res.data))\n        dispatch({\n          type: GET_USER_ORDERS,\n          payload: res.data\n        })\n        history.push('/user-orders')\n  \n    } catch (error){\n        alert('Failed to get orders')\n        history.push('/')\n    }\n}\n\nexport const orderUpdate = (orderId, status, history) => async dispatch => {\n  try {\n      const res = await axios.put(`http://ec2-13-210-206-21.ap-southeast-2.compute.amazonaws.com:8082/api/orders/${status}/${orderId}`)\n      localStorage.setItem(\"orders\", JSON.stringify(res.data))\n      dispatch({\n          type: GET_USER_ORDERS,\n          payload: res.data\n      });\n      history.push('/')\n      history.push('/user-orders')\n  } catch (error){\n      alert('Error updating order')\n  }\n}","import React, { Component } from 'react'\nimport User from './User/User'\nimport Header from '../../Layout/Header'\n\n\nclass ProfilePage extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <User/>      \n            </div>\n        )\n    }\n}\n  \nexport default ProfilePage\n","import React, { Component } from 'react'\nimport Header from '../../Layout/Header'\nimport moment from 'moment'\nimport StarRatingComponent from 'react-star-rating-component'\n\nclass SellerProfile extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            seller : JSON.parse(localStorage.seller),\n            reviews : JSON.parse(localStorage.userReviews)\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={this.state.seller.image} alt=''/>\n                            </div>\n                            <div className='col-lg-9 col-md9 col-9'>\n                            <h4>{this.state.seller.username.charAt(0).toUpperCase() + this.state.seller.username.slice(1).toLowerCase()}</h4><hr/>\n                            {\n                                this.state.seller.firstName !== null && this.state.seller.firstName !== '' ?\n                                <>{\n                                    this.state.seller.lastName === null || this.state.seller.lastName === '' ?\n                                    <p>Name: {this.state.seller.firstName.charAt(0).toUpperCase() + this.state.seller.firstName.slice(1)}</p> :\n                                    <p>Name: {this.state.seller.firstName.charAt(0).toUpperCase() + this.state.seller.firstName.slice(1)} {this.state.seller.lastName.charAt(0).toUpperCase() + this.state.seller.lastName.slice(1).toLowerCase()}</p>\n                                }</> : <>{\n                                    this.state.seller.lastName !== null && this.state.seller.lastName !== '' ?\n                                    <p>Name: {this.state.seller.lastName.charAt(0).toUpperCase() + this.state.seller.lastName.slice(1)}</p> : ''\n                                }</>\n                            }\n                            <p>Email: {this.state.seller.email.toLowerCase()}</p>\n                            {\n                                this.state.seller.phone !== null && this.state.seller.phone !== '' ?\n                                <p>Phone: {this.state.seller.phone}</p> : ''\n                            }\n                            {\n                                this.state.seller.accountType === 'Publisher' ?\n                                <>{\n                                    this.state.seller.abn !== null && this.state.seller.abn !== '' ?\n                                    <p>ABN: {this.state.seller.abn}</p> : ''\n\n                                }</> : ''\n                            }\n                            {\n                                this.state.seller.about !== null && this.state.seller.about !== '' ?\n                                <p>About: {this.state.seller.about}</p> : ''\n                            }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <>{ this.state.reviews.length > 0 ?\n                <div className='review-container'>\n                    <h1 className='review-heading'>Reviews</h1>\n                    {\n                        this.state.reviews.map(\n                        review =>\n                        <div key={review.id} className='user-reviews'>\n                            <label className='review-time-label'>\n                                -  {moment(review.create_At).fromNow()}\n                            </label><br/>\n                            <StarRatingComponent \n                                className='star-rating' \n                                starCount={5}\n                                value={review.score}\n                                /><br/>\n                            <label className='review-review-label'>\n                                {review.review}\n                            </label><br/>\n                            <label className='review-reviewer-label'>\n                                {review.reviewer.charAt(0).toUpperCase()+review.reviewer.slice(1)}\n                            </label><br/><br/>\n                        </div>\n                        )}\n                </div> : ''\n                }</>\n            </div>\n        )\n    }\n}\n  \nexport default SellerProfile\n","import React, { Component } from 'react'\nimport Header from '../Layout/Header'\n\nclass PaymentSuccess extends Component {\n\n    render(){\n        return(\n            <div>\n                <Header/>\n                <div className='payment-success'>\n                    <h1>Payment Success!</h1>\n                    <h2>Thank you for your purchase.</h2>\n                    <h2>Check the status of your order in your profile.</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PaymentSuccess","import React, { Component } from 'react'\nimport Header from '../Layout/Header'\nimport { connect } from 'react-redux'\nimport { createNewBook } from '../../actions/securityActions'\nimport * as PropTypes from 'prop-types'\nimport store from '../../store'\n\nconst initialState = {\n    title: '',\n    isbn: '',\n    author: '',\n    genre: '',\n    description: '',\n    price: '',\n    image: '',\n    titleError: '',\n    isbnError: '',\n    authorError: '',\n    genreError: '',\n    descriptionError: '',\n    priceError: '',\n    imageError: ''\n}\n\nclass CreateBook extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = initialState\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    validate = () => {\n        let titleError = ''\n        let isbnError = ''\n        let authorError = ''\n        let genreError = ''\n        let descriptionError = ''\n        let priceError = ''\n        let imageError = ''\n\n        if (!this.state.title.trim()) {\n            titleError = 'Title required'\n        }\n        if (!this.state.isbn.trim()) {\n            isbnError = 'ISBN required';\n        } else if (this.state.isbn.length !== 13 || (!/^[0-9\\b]+$/.test(this.state.isbn))) {\n            isbnError = 'ISBN must be 13 digits'\n        }\n        if (!this.state.author.trim()) {\n            authorError = 'Author required'\n        } \n        if (!this.state.genre.trim()) {\n            genreError = 'Genre required'\n        }\n        if (!this.state.description.trim()) {\n            descriptionError = 'Description required'\n        }\n        if (!this.state.price.trim()) {\n            priceError = 'Price required'\n        } else if (!/^(\\d+(\\.\\d{0,2})?|\\.?\\d{1,2})$/.test(this.state.price)) {\n            priceError = 'Not a valid price'\n        }\n        if (this.state.image === null) {\n            imageError = 'Image required'\n        }\n        if (titleError || isbnError || authorError || genreError || descriptionError || priceError || imageError) {\n            this.setState({ titleError, isbnError, authorError, genreError, descriptionError, priceError, imageError })\n            return false\n        }\n        return true\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        const isValid = this.validate()\n        \n        if (isValid) {\n            const newBook = {\n                title: this.state.title,\n                isbn: this.state.isbn,\n                author: this.state.author,\n                genre: this.state.genre,\n                description:this.state.description,\n                price: this.state.price,\n                image: this.state.image,\n                seller: store.getState().security.user.username\n            }\n            this.props.createNewBook(newBook, this.props.history);\n        }\n    }\n\n    render(){\n        return (\n        <>\n            <div className='App'><Header/></div>\n            <div className='book-form-container'>\n            <form className='book-form' onSubmit={this.onSubmit}>\n                <h2 className='book-form-heading'>Sell A Book</h2>\n                <div className='create-book-field'>\n                    <div>\n                    <label \n                        htmlFor='title' \n                        className='book-form-label'>\n                        Title\n                    </label>\n                    </div>\n                    <div>\n                    <input \n                        id='title'\n                        type='text' \n                        name='title' \n                        className='book-form-input' \n                        placeholder='Enter title of the book'\n                        value={this.state.title}\n                        onChange={this.onChange}\n                    /> \n                    <p>{this.state.titleError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='image' \n                            className='book-form-label'>\n                            Image\n                        </label>\n                    </div>\n                    <div>\n                        <input \n                            id='image' \n                            type='text' //change to file to uplaod from computer\n                            name='image' \n                            className='book-form-input' \n                            placeholder='URL of image'\n                            value={this.state.image}\n                            onChange={this.onChange}\n                        />\n                        <p>{this.state.imageError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='isbn' \n                            className='book-form-label'>\n                            ISBN\n                        </label>\n                    </div>\n                    <div>\n                        <input \n                            id='isbn'\n                            type='text'\n                            name='isbn' \n                            className='book-form-input' \n                            placeholder='Enter isbn of the book'\n                            value={this.state.isbn}\n                            onChange={this.onChange}\n                        /> \n                        <p>{this.state.isbnError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='author' \n                            className='book-form-label'>\n                            Author\n                        </label>\n                    </div>\n                    <div>\n                        <input \n                            id='author' \n                            type='text' \n                            name='author' \n                            className='book-form-input' \n                            placeholder='Enter author of the book'\n                            value={this.state.author}\n                            onChange={this.onChange}\n                        />\n                        <p>{this.state.authorError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='genre' \n                            className='book-form-label'>\n                            Genre\n                        </label>\n                    </div>\n                    <div>\n                        <input \n                            id='genre' \n                            type='text' \n                            name='genre' \n                            className='book-form-input' \n                            placeholder='Enter genre of the book'\n                            value={this.state.genre}\n                            onChange={this.onChange}\n                        />\n                        <p>{this.state.genreError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='price' \n                            className='book-form-label'>\n                            Price\n                        </label>\n                    </div>\n                    <div>\n                        <input \n                            id='price' \n                            type='text' \n                            name='price' \n                            className='book-form-input' \n                            placeholder='Enter price for book'\n                            value={this.state.price}\n                            onChange={this.onChange}\n                        />\n                        <p>{this.state.priceError}</p>\n                    </div>\n                </div>\n                <div className='create-book-field'>\n                    <div>\n                        <label \n                            htmlFor='description' \n                            className='book-form-label'>\n                            Description\n                        </label>\n                    </div>\n                    <div>\n                        <textarea \n                            id='description' \n                            type='text' \n                            name='description' \n                            className='book-form-input' \n                            placeholder='Enter description for book'\n                            value={this.state.description}\n                            onChange={this.onChange}\n                        />\n                        <p>{this.state.descriptionError}</p>\n                    </div>\n                </div>\n                <br/>\n                <button\n                    className='buy-btn' \n                    type='submit'>\n                    Sell Book\n                </button>\n            </form>\n        </div>\n        </>)\n    }\n}\nCreateBook.propTypes = {\n    createNewBook: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n  \nexport default connect(\n    mapStateToProps,\n    { createNewBook }\n)(CreateBook)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getUsers, getSeller, deleteUser, approveUser } from '../../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport Header from '../../../Layout/Header'\nimport store from '../../../../store'\nimport moment from 'moment'\n\nclass PendingAccounts extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            users : []\n        }\n    }\n\n    componentDidMount(){\n        let users = []\n        for (let i = 0; i < JSON.parse(localStorage.users).length; i++) {\n            if (JSON.parse(localStorage.users)[i].isActive === false) {\n                users.push(JSON.parse(localStorage.users)[i])\n            }\n        }\n        this.setState({ users })\n    }\n\n    removeFromTable = (contactId) => {\n        const newUsers = [...this.state.users]\n        const index = this.state.users.findIndex((contact)=> contact.id === contactId)\n        newUsers.splice(index, 1)\n        this.setState({ users: newUsers })\n    }\n\n    onSubmit(e,input, id){\n        e.preventDefault()\n        if (input === 'pendingAccounts') {\n            this.props.getUsers(this.props.history, 'toPending') \n        } else if (input === 'allAccounts') {\n            this.props.getUsers(this.props.history, 'toAllUsers') \n        } else if (input === 'decline') {\n            this.props.deleteUser(id) \n            this.removeFromTable(id)\n        } else if (input === 'approve') {\n            this.props.approveUser(id) \n            this.removeFromTable(id)\n        } else if (input === 'getUser') {\n            this.props.getSeller(id, this.props.history)\n        }\n    }\n    \n    render(){\n        return(\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'allAccounts')}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-edit pr-1'>All Accounts</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='/dashboard'>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-9'>\n                            { this.state.users.length > 0 ?\n                                <><div className='container'>             \n                                    <h4>Pending Accounts</h4>\n                                    <table className = 'table table-striped'>\n                                        <thead>\n                                            <tr>\n                                                <td> Username</td>\n                                                <td> Email</td>\n                                                <td> Created</td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.state.users.map(\n                                                user =>\n                                                <tr key = {user.id}>\n                                                    <td> <Link to='' onClick={e=>this.onSubmit(e,'getUser',user.username)}>{user.username.charAt(0).toUpperCase() + user.username.slice(1)}</Link></td>\n                                                    <td> {user.email}</td>\n                                                    <td> {moment(user.create_At).fromNow()}</td>\n                                                    <td><button onClick={e=>this.onSubmit(e,'approve',user.id)}>Approve</button></td>\n                                                    <td><button onClick={e=>this.onSubmit(e,'decline',user.id)}>Decline</button></td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </table>   \n                                </div></> : <h4>No pending accounts</h4>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nPendingAccounts.propTypes = {\n    getUsers: PropTypes.func.isRequired,\n    getSeller: PropTypes.func.isRequired,\n    deleteUser: PropTypes.func.isRequired,\n    approveUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { getUsers, getSeller, deleteUser, approveUser }\n)(PendingAccounts))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getUsers, getSeller } from '../../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport Header from '../../../Layout/Header'\nimport store from '../../../../store'\nimport moment from 'moment'\nimport { CSVLink } from 'react-csv'\n\nconst headers = [\n    {label: 'Id', key: 'id'},\n    {label: 'Username', key: 'username'},\n    {label: 'FirstName', key: 'firstName'},\n    {label: 'LastName', key: 'lastName'},\n    {label: 'Email', key: 'email'},\n    {label: 'Phone', key: 'phone'},\n    {label: 'ABN', key: 'abn'},\n    {label: 'AccountType', key: 'accountType'},\n    {label: 'AccountActive', key: 'isActive'},\n    {label: 'About', key: 'about'},\n    {label: 'Create_At', key: 'create_At'}\n]\n\n\n\nclass AllAccounts extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users : [],\n            csvReport: {\n                filename: 'AllAccounts.csv',\n                headers: headers,\n                data: JSON.parse(localStorage.users)\n            }\n        }\n    }\n\n    componentDidMount() {\n        let users = []\n        for (let i = 0; i < JSON.parse(localStorage.users).length; i++) {\n            if (JSON.parse(localStorage.users)[i].isActive === true) {\n                users.push(JSON.parse(localStorage.users)[i])\n            }\n        }\n        this.setState({users})\n    }\n    \n    onSubmit(e,input) {\n        e.preventDefault();\n        if (input === 'pendingAccounts') {\n            this.props.getUsers(this.props.history, 'toPending') \n        } else if (input === 'allAccounts') {\n            this.props.getUsers(this.props.history, 'toAllUsers') \n        } else {\n            this.props.getSeller(input, this.props.history)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='' onClick={e=>this.onSubmit(e,'pendingAccounts')}>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Pending Accounts</i>\n                                        </li>\n                                    </Link>\n                                    <Link to='/dashboard'>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-8'>\n                                <div className='container'>    \n                                    <div className='csv-button'>\n                                        <h4>All Accounts</h4>    \n                                        <div className='csv-button-1'>\n                                            <CSVLink {...this.state.csvReport}>Export to CSV</CSVLink>\n                                        </div>\n                                    </div>    \n                                    <table className = 'table table-striped'>\n                                        <thead>\n                                            <tr>\n                                                <td> Username</td>\n                                                <td> Email</td>\n                                                <td> Account Type</td>\n                                                <td> Created</td>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                            this.state.users.map(\n                                                user =>\n                                                <tr key = {user.id}>\n                                                    <td> <Link to='' onClick={e=>this.onSubmit(e,user.username)}>{user.username.charAt(0).toUpperCase() + user.username.slice(1)}</Link></td>\n                                                    <td> {user.email}</td>\n                                                    <td> {user.accountType}</td>\n                                                    <td> {moment(user.create_At).fromNow()}</td>\n                                                </tr>\n                                            )\n                                            }\n                                        </tbody>\n                                    </table>   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAllAccounts.propTypes = {\n    getUsers: PropTypes.func.isRequired,\n    getSeller: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { getUsers, getSeller }\n)(AllAccounts))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport { orderUpdate } from '../../../../actions/orderActions'\nimport { getSeller } from '../../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport moment from 'moment'\n\n\nclass UserOrders extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            orders : JSON.parse(localStorage.orders)\n        }\n    }\n\n    onSubmit(e,input, option, id){\n        e.preventDefault()\n        if (option === 'getSeller'){\n            this.props.getSeller(input, this.props.history)\n        } else if (option === 'getBuyer'){\n            this.props.getSeller(input, this.props.history)\n        } else if (option === 'orderUpdate'){\n            this.props.orderUpdate(id, input, this.props.history) \n        } else if (option === 'reviewBook'){\n            this.props.reviewBook(id, input, this.props.history) \n        }\n    }\n    \n    render(){\n        return(\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/dashboard'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-8'>\n                            <div className='container'>    \n                            <h4>Purchases</h4>         \n                                <table className = 'table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <td> Book</td>\n                                            <td> Price</td>\n                                            <td> Seller</td>\n                                            <td> Status</td>\n                                            <td> Bought</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                        this.state.orders.map(\n                                            order => \n                                            <tr key = {order.id}>\n                                            { order.buyer.toLowerCase() === store.getState().security.user.username.toLowerCase() \n                                                ?\n                                                <><td> <Link to={{pathname: 'review-book',\n                                                            state: {\n                                                                bookReviewedID: order.bookID,\n                                                                bookReviewedTitle: order.book\n                                                            }}}>{order.book}</Link></td>\n                                                <td> ${order.price.toFixed(2)}</td>\n                                                <td> <Link to={{pathname: 'review-user',\n                                                            state: {\n                                                                userReviewed: order.seller\n                                                            }}}>{order.seller.charAt(0).toUpperCase()+order.seller.slice(1).toLowerCase()}</Link></td>\n                                                <td> {order.status}</td>\n                                                <td> {moment(order.create_At).fromNow()}</td>\n\n                                                { // If purchase was under two hours ago\n                                                    moment().diff(order.create_At, 'minutes') < 120 && order.status !== 'CANCELLED'? \n                                                    <td><button onClick={e=>this.onSubmit(e,'cancelled', 'orderUpdate', order.id)}>Cancel order</button></td>\n                                                    :\n                                                    <></>\n                                                }</>\n                                                :''\n                                            }\n                                            </tr>\n                                        )\n                                        }\n                                    </tbody>\n                                </table>   \n                                <br/>\n                                <h4>Sales</h4>         \n                                <table className = 'table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <td> Book</td>\n                                            <td> Price</td>\n                                            <td> Buyer</td>\n                                            <td> Status</td>\n                                            <td> Sold</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                        this.state.orders.map(\n                                            order => \n                                            <tr key = {order.id}>\n                                            { order.seller.toLowerCase() === store.getState().security.user.username.toLowerCase() \n                                                ?\n                                                <><td> {order.book}</td>\n                                                <td> ${order.price.toFixed(2)}</td>\n                                                <td> <Link to={{pathname: 'review-user',\n                                                                state: {\n                                                                    userReviewed: order.buyer\n                                                                }}}>{order.buyer}</Link></td>\n                                                <td> {order.status}</td>\n                                                <td> {moment(order.create_At).fromNow()}</td>\n\n                                                { // If order status is preparing, show the mark as shipped button\n                                                    order.status === 'Preparing' ? \n                                                    <td><button onClick={e=>this.onSubmit(e,'shipped', 'orderUpdate', order.id)}>Mark as shipped</button></td>\n                                                    :\n                                                    <></>\n                                                }\n                                                {\n                                                    order.status === 'Shipped' ? \n                                                    <td><button onClick={e=>this.onSubmit(e,'delivered', 'orderUpdate', order.id)}>Mark as delivered</button></td>\n                                                    :\n                                                    <></>\n                                                }</>:''\n                                            }\n                                            </tr>\n                                        )\n                                        }\n                                    </tbody>\n                                </table>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nUserOrders.propTypes = {\n    orderUpdate: PropTypes.func.isRequired,\n    getSeller: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { orderUpdate, getSeller }\n)(UserOrders))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { editUser } from '../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport store from '../../../store'\nimport Header from '../../Layout/Header'\n\n\nclass Edit extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            phone: '',\n            about: '',\n            abn: '',\n            image: '',\n            emailError: '',\n            abnError: '',\n            phoneError: '',\n            imageSelected: false\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount(){\n        let firstName = ''\n        let lastName = ''\n        let email = ''\n        let phone = ''\n        let about = ''\n        let abn = ''\n        let image = ''\n        if (store.getState().security.user.firstName) {\n            firstName = store.getState().security.user.firstName.charAt(0).toUpperCase() + store.getState().security.user.firstName.slice(1)\n        }\n        if (store.getState().security.user.lastName) {\n            lastName = store.getState().security.user.lastName.charAt(0).toUpperCase() + store.getState().security.user.lastName.slice(1)\n        }\n        if (store.getState().security.user.email) {\n            email = store.getState().security.user.email\n        }\n        if (store.getState().security.user.phone) {\n            phone = store.getState().security.user.phone\n        }\n        if (store.getState().security.user.about) {\n            about = store.getState().security.user.about\n        }\n        if (store.getState().security.user.abn) {\n            abn = store.getState().security.user.abn\n        }\n        if (store.getState().security.user.image) {\n            image = store.getState().security.user.image\n        }\n        if (firstName || lastName || email || phone || about || abn || image) {\n            this.setState({ firstName, lastName, email, phone, about, abn, image })\n        }\n        if (this.props.errors.emailError){\n            let emailError = this.props.errors.emailError\n            this.setState({emailError})\n            this.props.errors.emailError = ''\n        }\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validate = () => {\n        let emailError = ''\n        let abnError = ''\n        let phoneError = ''\n\n        if (!this.state.email) {\n            emailError = 'Email required'\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(this.state.email)){\n            emailError = 'Invalid email'\n        }\n        if (!this.state.abn && store.getState().security.user.accountType === 'Publisher') {\n            abnError = 'ABN required'\n        } else if ((this.state.abn.length !== 10 || (!/^[0-9\\b]+$/.test(this.state.abn)))&&this.state.abn.length !== 0) {\n            abnError = 'ABN must be 10 digits'\n        }\n        if ((this.state.phone.length !== 10 || (!/^[0-9\\b]+$/.test(this.state.phone)))&&this.state.phone.length !== 0) {\n            phoneError = 'Phone number must be 10 digits'\n        }\n        if (emailError || abnError || phoneError) {\n            this.setState({ emailError, abnError, phoneError })\n            return false\n        }\n        return true\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        const isValid = this.validate()\n        if (isValid) {\n            const updateUser = {\n                firstName: this.state.firstName.toLowerCase(),\n                lastName: this.state.lastName.toLowerCase(),\n                email: this.state.email.toLowerCase(),\n                phone: this.state.phone,\n                about: this.state.about,\n                abn: this.state.abn,\n                image: this.state.image\n            }\n            this.props.editUser(store.getState().security.user.id, updateUser, this.props.history)\n        }\n    }\n\n    render(){\n        return (\n            <>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={this.state.image} alt=''/>\n                                <br/>\n                                <label \n                                    htmlFor='firstName' \n                                    className='name-label'>\n                                    Image link\n                                </label>\n                                <input \n                                        id='image'\n                                        type='text' \n                                        name='image' \n                                        className='form-input' \n                                        placeholder='Link to image'\n                                        value={this.state.image}\n                                        onChange={this.onChange}\n                                    />  \n                                {\n                                    this.state.imageSelected ?\n                                    <div>\n                                    <button onClick={this.fileUploadHandler}>Upload</button>\n                                    <img id='thumbnail' alt='profile-preview'/>\n                                    </div> : ''\n                                }\n                                <ul className='list-group'>\n                                    <br/>\n                                    <Link to='' onClick={e=>this.onSubmit(e)}>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Save and return</i>\n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-9'>\n                                <h4>Edit Profile</h4><hr/>\n                                <div className='edit-name-labels'>\n                                    <label \n                                        htmlFor='firstName' \n                                        className='name-label'>\n                                        First Name\n                                    </label>\n                                    <label \n                                        htmlFor='lastName' \n                                        className='name-label'>\n                                        Last Name\n                                    </label>\n                                </div>\n                                <div className='edit-name-inputs'>\n                                    <input \n                                        id='firstName'\n                                        type='text' \n                                        name='firstName' \n                                        className='name-input' \n                                        placeholder='Enter your first name'\n                                        value={this.state.firstName}\n                                        onChange={this.onChange}\n                                    /> \n                                    <input \n                                        id='lastName'\n                                        type='text' \n                                        name='lastName' \n                                        className='name-input' \n                                        placeholder='Enter your last name'\n                                        value={this.state.lastName}\n                                        onChange={this.onChange}\n                                    /> \n                                </div>\n                                <br/>\n                                <div className='edit-inputs'>\n                                    <label \n                                        htmlFor='email' \n                                        className='edit-label'>\n                                        Email\n                                    </label>\n                                    <input \n                                        id='email' \n                                        type='email' \n                                        name='email' \n                                        className='form-input' \n                                        placeholder='Enter your email'\n                                        value={this.state.email}\n                                        onChange={this.onChange}\n                                    />\n                                    <p>{this.state.emailError}</p>\n                                    <br/>\n                                </div>\n                                <div className='edit-inputs'>\n                                    <label \n                                        htmlFor='phone' \n                                        className='edit-label'>\n                                        Phone\n                                    </label>\n                                    <input \n                                        id='phone' \n                                        type='text' \n                                        name='phone' \n                                        className='form-input' \n                                        placeholder='Enter your phone'\n                                        value={this.state.phone}\n                                        onChange={this.onChange}\n                                    />\n                                    <p>{this.state.phoneError}</p>\n                                    <br/>\n                                </div>\n                                {\n                                store.getState().security.user.accountType === 'Publisher' ?\n                                \n                                    <div className='edit-inputs'>\n                                        <label \n                                            htmlFor='abn' \n                                            className='edit-label'>\n                                            Abn\n                                        </label>\n                                        <input \n                                            id='abn' \n                                            type='text' \n                                            name='abn' \n                                            className='form-input' \n                                            placeholder='Enter your abn'\n                                            value={this.state.abn}\n                                            onChange={this.onChange}\n                                        />\n                                        <p>{this.state.abnError}</p>\n                                        <br/>\n                                    </div>\n                                    : ''\n                                }\n                                <div>\n                                    <label \n                                        htmlFor='about' \n                                        className='edit-label'>\n                                        About\n                                    </label>\n                                    <textarea \n                                        id='about' \n                                        type='text' \n                                        name='about' \n                                        className='text-area-input' \n                                        placeholder='Tell us about yourself'\n                                        value={this.state.about}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\nEdit.propTypes = {\n    editUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { editUser }\n)(Edit))","import React, { Component } from 'react'\nimport Header from './Header'\n\nclass About extends Component {\n\n    render(){\n        return (\n            <div>\n                <Header />\n                <p>Group 5</p>\n                <p>Adam Wuei Cherng Hannington-Chen     s3720247</p>\n                <p>Haopeng Zhou                         s3555521</p>\n                <p>Quoc Tran                            s3827826</p>\n                <p>Yuehan Chen                          s3714653</p>  \n            </div>\n        )\n    }\n}\n  \nexport default About","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport moment from 'moment'\nimport { getSeller } from '../../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { CSVLink } from 'react-csv'\n\nconst headers = [\n    {label: 'Id', key: 'id'},\n    {label: 'Seller', key: 'seller'},\n    {label: 'Buyer', key: 'buyer'},\n    {label: 'Book', key: 'book'},\n    {label: 'BookID', key: 'bookID'},\n    {label: 'Price', key: 'price'},\n    {label: 'Status', key: 'status'},\n    {label: 'Create_At', key: 'create_At'}\n]\n\nclass AllTransactions extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            orders : JSON.parse(localStorage.allOrders),\n            csvReport: {\n                filename: 'AllTransactions.csv',\n                headers: headers,\n                data: JSON.parse(localStorage.allOrders)\n            }\n        }\n    }\n\n    onSubmit(e,input, option){\n        e.preventDefault()\n        if (option === 'getSeller') {\n            this.props.getSeller(input, this.props.history)\n        } else if (option === 'getBuyer') {\n            this.props.getSeller(input, this.props.history)\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/dashboard'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-8'>\n                                <div className='container'>    \n                                    <div className='csv-button'>\n                                        <h4>All Transactions</h4>    \n                                        <div className='csv-button-1'>\n                                            <CSVLink {...this.state.csvReport}>Export to CSV</CSVLink>\n                                        </div>\n                                    </div>     \n                                    <table className = 'table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <td> Book</td>\n                                            <td> Price</td>\n                                            <td> Seller</td>\n                                            <td> Status</td>\n                                            <td> Purchased</td>\n                                            <td> Buyer</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                        this.state.orders.map(\n                                            order =>\n                                            <tr key = {order.id}>\n                                                <td> {order.book.charAt(0).toUpperCase() + order.book.slice(1)}</td>\n                                                <td> ${order.price.toFixed(2)}</td>\n                                                <td> <Link to='' onClick={e=>this.onSubmit(e,order.seller,'getSeller')}>{order.seller.charAt(0).toUpperCase() + order.seller.slice(1)}</Link></td>\n                                                <td> {order.status.charAt(0).toUpperCase() + order.status.slice(1)}</td>\n                                                <td> {moment(order.create_At).fromNow()}</td>\n                                                <td> <Link to='' onClick={e=>this.onSubmit(e,order.buyer,'getBuyer')}>{order.buyer.charAt(0).toUpperCase() + order.buyer.slice(1)}</Link></td>\n                                            </tr>\n                                        )\n                                        }\n                                    </tbody>\n                                    </table>   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAllTransactions.propTypes = {\n    getSeller: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { getSeller }\n)(AllTransactions))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport moment from 'moment'\nimport { getBook } from '../../../../actions/bookActions'\nimport { getSeller } from '../../../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { CSVLink } from 'react-csv'\n\n\nconst headers = [\n    {label: 'Id', key: 'id'},\n    {label: 'ISBN', key: 'isbn'},\n    {label: 'Title', key: 'title'},\n    {label: 'Author', key: 'author'},\n    {label: 'Genre', key: 'genre'},\n    {label: 'Description', key: 'description'},\n    {label: 'Price', key: 'price'},\n    {label: 'Seller', key: 'seller'},\n    {label: 'Create_At', key: 'create_At'}\n]\n\nclass AllBooks extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            books : JSON.parse(localStorage.books),\n            csvReport: {\n                filename: 'BookReport.csv',\n                headers: headers,\n                data: JSON.parse(localStorage.books)\n            }\n        }\n    }\n\n    onSubmit(e,input, option){\n        e.preventDefault()\n        if (option === 'getBook'){\n            this.props.getBook(input, this.props.history)\n        } else if (option === 'getSeller'){\n            this.props.getSeller(input, this.props.history)\n        }\n    }\n    \n    render(){\n        return(\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/dashboard'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-8'>\n                                <div className='container'>    \n                                    <div className='csv-button'>\n                                        <h4>All Books</h4>    \n                                        <div className='csv-button-1'>\n                                            <CSVLink {...this.state.csvReport}>Export to CSV</CSVLink>\n                                        </div>\n                                    </div> \n                                    <table className = 'table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <td> Title</td>\n                                            <td> Author</td>\n                                            <td> ISBN</td>\n                                            <td> Seller</td>\n                                            <td> Price</td>\n                                            <td> Listed</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                        this.state.books.map(\n                                            book =>\n                                            <tr key = {book.id}>\n                                                <td> <Link to='' onClick={e=>this.onSubmit(e,book.id,'getBook')}>{book.title.charAt(0).toUpperCase() + book.title.slice(1)}</Link></td>\n                                                <td> {book.author.charAt(0).toUpperCase() + book.author.slice(1)}</td>\n                                                <td> {book.isbn}</td>\n                                                <td> <Link to='' onClick={e=>this.onSubmit(e,book.seller,'getSeller')}>{book.seller.charAt(0).toUpperCase() + book.seller.slice(1)}</Link></td>\n                                                <td> {book.price.toFixed(2)}</td>\n                                                <td> {moment(book.create_At).fromNow()}</td>\n                                            </tr>\n                                        )\n                                        }\n                                    </tbody>\n                                    </table>   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nAllBooks.propTypes = {\n    getBook: PropTypes.func.isRequired,\n    getSeller: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { getBook, getSeller }\n)(AllBooks))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { postReview } from '../../../../actions/reviewActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport StarRatingComponent from 'react-star-rating-component'\n\n\nclass ReviewUser extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            reviewer: '',\n            review: '',\n            userReviewed: '',\n            score: '',\n            reviewError: '',\n            scoreError: ''\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount(){\n        let userReviewed = ''\n        if (this.props.location.state.userReviewed) {\n            userReviewed = this.props.location.state.userReviewed\n        }\n        if (userReviewed){\n            this.setState({ userReviewed })\n        }\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validate = () => {\n        let reviewError = ''\n        let scoreError = ''\n\n        if (!this.state.review) {\n            reviewError = 'Review required'\n        } \n        if (!this.state.score) {\n            scoreError = 'Star rating required'\n        }\n        if (reviewError || scoreError ) {\n            this.setState({ reviewError, scoreError })\n            return false\n        }\n        return true\n    }\n\n    onStarClick(nextValue){\n        this.setState({score: nextValue})\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const isValid = this.validate()\n        if (isValid) {\n            const review = {\n                reviewer: store.getState().security.user.username,\n                review: this.state.review,\n                userReviewed: this.state.userReviewed,\n                score: this.state.score\n            }\n            this.props.postReview(review, this.props.history)\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/user-orders'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e)}>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Post review</i>\n                                        </li>\n                                    </Link>\n                                </ul>\n                                \n                            </div>\n                            <div className='col-lg-9 col-md-4 col-9'>\n                                <h4>{this.state.userReviewed.charAt(0).toUpperCase()+this.state.userReviewed.slice(1)}</h4><hr/>\n                                <div>\n                                    <div className='star-rating-input'>\n                                        <StarRatingComponent \n                                            id='score'\n                                            name='score' \n                                            starCount={5}\n                                            value={this.state.score}\n                                            onStarClick={this.onStarClick.bind(this)}\n                                        />\n                                        <p>{this.state.scoreError}</p>\n                                    </div>\n                                    <div className='review-input'>\n                                        <textarea \n                                            id='review' \n                                            type='text' \n                                            name='review' \n                                            className='text-area-input' \n                                            placeholder='Write a review'\n                                            value={this.state.review}\n                                            onChange={this.onChange}\n                                        />\n                                        <p>{this.state.reviewError}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nReviewUser.propTypes = {\n    postReview: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { postReview }\n)(ReviewUser))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { postReview } from '../../../../actions/reviewActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport StarRatingComponent from 'react-star-rating-component'\n\n\n\nclass ReviewBook extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            reviewer: '',\n            review: '',\n            bookReviewedTitle: '',\n            bookReviewedID: '',\n            score: '',\n            reviewError: '',\n            scoreError: ''\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount(){\n        let bookReviewedTitle = ''\n        let bookReviewedID = ''\n        if (this.props.location.state.bookReviewedTitle) {\n            bookReviewedTitle = this.props.location.state.bookReviewedTitle\n            bookReviewedID = this.props.location.state.bookReviewedID\n        }\n        if (bookReviewedTitle || bookReviewedID) {\n            this.setState({ bookReviewedTitle, bookReviewedID })\n        }\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    validate = () => {\n        let reviewError = ''\n        let scoreError = ''\n\n        if (!this.state.review) {\n            reviewError = 'Review required'\n        } \n        if (!this.state.score) {\n            scoreError = 'Star rating required'\n        }\n        if (reviewError || scoreError ) {\n            this.setState({ reviewError, scoreError })\n            return false\n        }\n        return true\n    }\n\n    onStarClick(nextValue){\n        this.setState({score: nextValue})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n        const isValid = this.validate()\n        if (isValid) {\n            const review = {\n                reviewer: store.getState().security.user.username,\n                review: this.state.review,\n                bookReviewedID: this.state.bookReviewedID,\n                score: this.state.score\n            }\n            this.props.postReview(review, this.props.history)\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/user-orders'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                    <Link to='' onClick={e=>this.onSubmit(e)}>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            <i className='fa fa-flag-checkered pr-1'>Post review</i>\n                                        </li>\n                                    </Link>\n                                </ul>\n                                \n                            </div>\n                            <div className='col-lg-9 col-md-4 col-9'>\n                                <h4>{this.state.bookReviewedTitle}</h4><hr/>\n                                <div>\n                                    <div className='star-rating-input'>\n                                        <StarRatingComponent \n                                            id='score'\n                                            name='score' \n                                            starCount={5}\n                                            value={this.state.score}\n                                            onStarClick={this.onStarClick.bind(this)}\n                                        />\n                                        <p>{this.state.scoreError}</p>\n                                    </div>\n                                    <div className='review-input'>\n                                        <textarea \n                                            id='review' \n                                            type='text' \n                                            name='review' \n                                            className='text-area-input' \n                                            placeholder='Write a review'\n                                            value={this.state.review}\n                                            onChange={this.onChange}\n                                        />\n                                        <p>{this.state.reviewError}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nReviewBook.propTypes = {\n    postReview: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\n  \nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n})\n  \nexport default withRouter(connect(\n    mapStateToProps,\n    { postReview }\n)(ReviewBook))","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport store from '../../../../store'\nimport Header from '../../../Layout/Header'\nimport moment from 'moment'\n\n\nclass AllReviews extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            reviews : JSON.parse(localStorage.reviews)\n        }\n    }\n    \n    render(){\n        return (\n            <div>\n                <Header/>\n                <div className='container'>\n                    <div className='card card-body bg-light mb-3'>\n                        <div className='row'>\n                            <div className='col-3'>\n                                <img src={store.getState().security.user.image} alt=''/>\n                                <ul className='list-group'>\n                                    <Link to='/dashboard'>\n                                        <br/>\n                                        <li className='list-group-item board'>\n                                            Back \n                                        </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                            <div className='col-lg-9 col-md-4 col-8'>\n                                <div className='container'>    \n                                <h4>All Reviews</h4>         \n                                    <table className = 'table table-striped'>\n                                    <thead>\n                                        <tr>\n                                            <td> User</td>\n                                            <td> Book ID</td>\n                                            <td> Score</td>\n                                            <td> By</td>\n                                            <td> Review</td>\n                                            <td> Posted</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                        this.state.reviews.map(\n                                            review =>\n                                            <tr key = {review.id}>\n                                                <td> {review.userReviewed}</td>\n                                                <td> {review.bookReviewedID}</td>\n                                                <td> {review.score}</td>\n                                                <td> {review.reviewer}</td>\n                                                <td> {review.review}</td>\n                                                <td> {moment(review.create_At).fromNow()}</td>\n                                            </tr>\n                                        )\n                                        }\n                                    </tbody>\n                                    </table>   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n  \nexport default AllReviews","import './App.css'\nimport React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport HomePage from './components/Layout/HomePage'\nimport LogInPage from './components/UserManagement/LogIn/LogInPage'\nimport SignUpPage from './components/UserManagement/SignUp/SignUpPage'\nimport SearchedBooks from './components/BookManagement/SearchedBooks'\nimport ProfilePage from './components/UserManagement/Profile/ProfilePage'\nimport SellerProfile from './components/UserManagement/Profile/SellerProfile'\n\nimport jwt_decode from 'jwt-decode'\nimport setJWTToken from './securityUtils/setJWTToken'\nimport { SET_CURRENT_USER } from './actions/types'\nimport { logout } from './actions/securityActions'\nimport SingleBook from './components/BookManagement/SingleBook'\nimport PaymentSuccess from './components/PaymentManagement/PaymentSuccess'\nimport CreateBook from './components/BookManagement/CreateBook'\nimport PendingAccounts from './components/UserManagement/Profile/Admin/PendingAccounts'\nimport AllAccounts from './components/UserManagement/Profile/Admin/AllAccounts'\nimport UserOrders from './components/UserManagement/Profile/User/UserOrders'\nimport Edit from './components/UserManagement/Profile/Edit'\nimport About from './components/Layout/About'\nimport AllTransactions from './components/UserManagement/Profile/Admin/AllTransactions'\nimport AllBooks from './components/UserManagement/Profile/Admin/AllBooks'\nimport ReviewUser from './components/UserManagement/Profile/User/ReviewUser'\nimport ReviewBook from './components/UserManagement/Profile/User/ReviewBook'\nimport AllReviews from './components/UserManagement/Profile/Admin/AllReviews'\n\n\nconst jwtToken = localStorage.jwtToken\n\nif (jwtToken){\n  setJWTToken(jwtToken);  \n  const decoded_jwtToken = jwt_decode(jwtToken)\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  })\n\n  const currentTime = Date.now() / 1000\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout)\n    // window.location.href = '/'\n  }\n}\n\nclass App extends Component {\n\n  render(){\n    return(\n      <Provider store={store}>\n        <BrowserRouter>\n            <div className='App'>\n              {\n                //Public Routes//\n              }\n            \n              <Route exact path='/' component={HomePage} />\n              <Route exact path='/search' component={SearchedBooks} />\n              <Route exact path='/book' component={SingleBook} />\n              <Route exact path='/seller' component={SellerProfile} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/signup' component={SignUpPage} />\n              <Route exact path='/login' component={LogInPage} />\n\n              {\n                //Private Routes\n              }\n              <Route exact path='/dashboard' component={ProfilePage} />\n              <Route exact path='/edit' component={Edit} />\n              <Route exact path='/sell' component={CreateBook} />\n              <Route exact path='/payment-success' component={PaymentSuccess} />\n              <Route exact path='/pending' component={PendingAccounts} />\n              <Route exact path='/allUsers' component={AllAccounts} />\n              <Route exact path='/user-orders' component={UserOrders} />\n              <Route exact path='/all-orders' component={AllTransactions} />\n              <Route exact path='/all-books' component={AllBooks} />\n              <Route exact path='/all-reviews' component={AllReviews} />\n              <Route exact path='/review-user' component={ReviewUser} />\n              <Route exact path='/review-book' component={ReviewBook} />\n\n            </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\nexport default App","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}